TITLE:: MGU_AbstractModule
summary:: Abstract class for all MGU modules
categories:: Libraries>MGU>AbstractModules
related:: Classes/MGU_AbstractBufferModule, Classes/MGU_AbstractWavetableModule, Classes/MGU_AbstractFilterModule

DESCRIPTION::
Main class for MGU module implementation. All MGU_module classes should directly or indirectly inherit from this.
See the link::Guides/BuildingUsingModules:: reference tutorial in order to get started with MGU_modules

CLASSMETHODS::

METHOD:: new

ARGUMENT:: out
Module's output bus. If code::nil::, the module will create its own private output bus.

ARGUMENT:: server
Server target. If code::nil::, code::Server.default:: will be automatically chosen.

ARGUMENT:: numChannels
Number of output channels, designed for Multichannel Expansion.

ARGUMENT:: name
an Instance of link::Classes/String::. Designed to build OSC addresses for the module and its parameters. If code::nil::, the generated name will be a concatenation of the module's class name with an unique index (e.g.: sfPlayer_1)

returns:: a link::Classes/MGU_AbstractModule::


INSTANCEMETHODS::

private:: nodeArray, nodeGroup, thisInstance, init, getPresetFilePath

METHOD:: container
See link::Classes/MGU_container:: for more information. Users should not have to directly access/modify this attribute.

METHOD:: registerToMinuit
registers the module for Minuit communication. See link::Classes/MGU_minuitInterface:: documentation for more information.

ARGUMENT:: minuitInterface
a link::Classes/MGU_minuitInterface::

METHOD:: sendSynth
instantiate a module synth on the server.

returns:: A link::Classes/Synth:: on the designated server, based on the module's link::Classes/SynthDef:: and parameter values.

METHOD:: killSynths
kill all synths sent by this module on the server

METHOD:: saveState
saves the module state

ARGUMENT:: fileName
an instance of link::Classes/String:: containing the preset's name

METHOD:: recallState
recalls a previously saved state

METHOD:: availablePresets
returns an array containing the name of all previously saved states

returns:: an link::Classes/Array:: of link::Classes/String::

ARGUMENT:: fileName
an instance of link::Classes/String:: containing the preset's name (see code::.availablePresets:: method)

ARGUMENT:: interp
parameter interpolation from current state (not yet implemented)

METHOD:: getPresetFolderPath
returns:: an instance of link::Classes/String:: containing the folder path used for saving & recalling preset files

METHOD:: out
Module's outbut bus, users should not have to use & access this: see the code::.connectToModule:: method instead
returns:: an instance of link::Classes/Integer:: or link::Classes/Bus::, depending on usage.

METHOD:: inbus
first index of an effect module input bus. Users shouldn't have to access nor modify this parameter, see code::.connectToModule:: method instead.

returns:: a link::Classes/MGU_parameter::

METHOD:: connectToModule
(describe method here)

ARGUMENT:: module
(describe argument here)

returns:: void

METHOD:: server
link::Classes/Server:: target for sending the module's synths.

returns:: a link::Classes/Server::

METHOD:: numChannels
gets/sets the number of channels for the module's output. Note: only works for modules supporting Multichannel expansion (see MGU module reference)

returns:: an link::Classes/Integer::

METHOD:: name
Designed to build OSC addresses for the module and its parameters

returns:: a link::Classes/String::

METHOD:: def
returns the module's link::Classes/SynthDef::

returns:: a link::Classes/SynthDef::

METHOD:: generateUI
generates and display an UI based on the module's descriptions and parameters.




EXAMPLES::

code::
(some example code)
::